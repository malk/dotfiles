#    -*- mode: org -*-

* Tasks
** TODO create an emacs function to create a defn for thingatpt
   [2013-01-31 Thu]
   [[file:~/dev/social-data-mining/test/social_data_mining/core_test.clj::(fact%20(skware%202)%20%3D>%205)][file:~/dev/social-data-mining/test/social_data_mining/core_test.clj::(fact (skware 2) => 5)]]
** TODO add nrepl-kill and nrepl-restart functions
   [2013-01-31 Thu]
** TODO midje lazytest should be compatible with lazy mode[2013-01-31 Thu]
** TODO shox dont tell[2013-02-03 Sun]
** TODO demo is better than images, but images stay, screencast is good but som people dotn want video, loads, what to do?
   [2013-02-03 Sun]
** TODO kolab == obm?
   [2013-02-03 Sun]
** TODO add 2d tag linking to the slides themselves
   [2013-02-03 Sun]
** TODO my photo as a background of the credit pages
   [2013-02-03 Sun]
** TODO Every page should have a picture, at least as background? what am I trying to convey that needs no pictures? its it still minimalistic? it is not better to focus on a simple word of small phrase?hmmmm #Prez
   [2013-02-03 Sun]
** TODO stumpwm should have a the same "single window and back" as my emacs[2013-02-03 Sun]
** TODO stympwm should have the freacking golden ration module, is too damn good
   [2013-02-03 Sun]
** TODO org mode meta-up and down on subthings correctly stops instead of getting out of your parent, but just beeps an error : it should cycle inside parent
   [2013-02-03 Sun]
   [[file:~/Documents/clients/romeu/improvement/stop-being-a-wreck.org::*]]
** TODO I should contribute my changes done on emacs.d
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::"Captures%20but%20bypass%20dialogues."][file:~/.emacs.d/init.el::"Captures but bypass dialogues."]]
** TODO I need to iterate/recur my call to function on emacs.d instead of repeating them a lot
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::%3B%3B%20Your%20init%20file%20should%20contain%20only%20one%20such%20instance.][file:~/.emacs.d/init.el::;; Your init file should contain only one such instance.]]
** TODO a kind of writeroom mode (margins, subduing/hiding modeline etc)
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::"Insert%20a%20single%20space%20deleting%20all%20white-space%20around."][file:~/.emacs.d/init.el::"Insert a single space deleting all white-space around."]]
** TODO the lttle elisper
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::(defun%20erc-kill%20()][file:~/.emacs.d/init.el::(defun erc-kill ()]]
** The little clojurer
** ERT the Emacs testing framework
** TODO fetch bulbebee on the assus apparently I can save battery with it
   [2013-02-04 Mon]
** TODO Asus wmi-âtch for my laptop apparently it adds something
   [2013-02-04 Mon]
** TODO make an emacs jargon mode, with export options
   [2013-02-04 Mon]
   [[file:~/Documents/clients/SODA-DGFIP/glossary.jargon]]
** TODO faire un add de font locking pour org-mode avec des symboles pour TODO et DONE
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::(defun%20toggle-maximize-buffer%20()][file:~/.emacs.d/init.el::(defun toggle-maximize-buffer ()]]
** TODO create a (at-dot-emacs-d PATH) function
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::(interactive)]]
** TODO create a macro for interactive (no reason for me to do a defun that is not)
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::(save-excursion]]
** TODO create a macro for save excursion (and narrowing)
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::(save-excursion]]
** TODO create a macro for saving registers
   [2013-02-04 Mon]
   [[file:~/.emacs.d/init.el::(save-excursion]]
** TODO Invert movement command on org, when I change hierarchy levels I want to default to a whole subtree moving and not just the parent
   [2013-02-04 Mon]
   [[file:~/Documents/clients/SODA-DGFIP/journal/2013-02-04.org::*]]
** TODO stumpwm chrome-as-ap launcher
   [2013-02-04 Mon]
   [[file:~/Documents/clients/SODA-DGFIP/contacts/contacts.org]]
** TODO emacs chrome-as-app launcher
   [2013-02-04 Mon]
   [[file:~/Documents/clients/SODA-DGFIP/contacts/contacts.org]]
*** TODO TDD as you mean it for Clojure
     [2013-02-05 Tue]
     [[file:~/Documents/clients/SODA-DGFIP/TODO.org::*Verifier%20qu'on%20peut%20les%20updater%20apr%C3%A8s%20zipper%20et%20dezipper%20en%20surchargeant][Verifier qu'on peut les updater après zipper et dezipper en surchargeant]]
*** TODO Code the test
*** TODO code the answer to the test inside the test
*** TODO now you should have a name for the code created
**** TODO extract it as a function in the same file
**** TODO extract is a function on the source file for this test file
***** TODO if the source file for this test file does not exist we should create it
****** TODO maybe we should even cal lein on it
**** TODO extract the test itself to another test file if it does not belong here
** TODO ERT + clojure?
** TODO ERT + elisp?
** TODO Ecukes?
** TODO Make a standard project template for Elisp with
*** TODO Ecukes
*** TODO marmalade
*** TODO MELPA
*** TODO ELPA
*** TODO el-get
*** TODO Travis-CI
*** TODO carton
*** TODO cabbage
** TODO elein with support for lein 2.0 should exist

** TODO erase some of the one char yasnippet expansions, maybe all
** TODO turn org mode TODO into ☐
   [2013-02-05 Tue]
   [[file:~/.emacs.d/init.el::%3B%3B%3B%20Perl][file:~/.emacs.d/init.el::;;; Perl]]
** TODO turn org mode DONE into ☑
** TODO subdue done entries on org mode
   [2013-02-05 Tue]
   [[file:~/.emacs.d/init.el::(add-hook%20'clojure-mode-hook%20'esk-pretty-fn)][file:~/.emacs.d/init.el::(add-hook 'clojure-mode-hook 'esk-pretty-fn)]]
